package options {	import flash.display.MovieClip;	import flash.display.Sprite;	import flash.geom.Rectangle;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.display.Stage;		public class MySlider extends Sprite {		private var sliderLen:Number;		private var dragging:Boolean;		private var rect:Rectangle;		private var isHorizontal:Boolean;		private var prevPos:Number;				public function MySlider() {			if (stage != null)				init(stage);		}				public function init(p_stage:Stage, isHorizontal:Boolean = true):void {			this.isHorizontal = isHorizontal;						if (isHorizontal) {				sliderLen = this.width;				prevPos = this.slider_mc.x;			}			else {				sliderLen = this.height;				prevPos = this.slider_mc.y;			}							rect = new Rectangle(0, 0, sliderLen, 0);			dragging = false;							this.slider_mc.addEventListener(MouseEvent.MOUSE_DOWN, dragIt);			p_stage.addEventListener(MouseEvent.MOUSE_MOVE, moveIt);			p_stage.addEventListener(MouseEvent.MOUSE_UP, dropIt);		}				private function dragIt(e:MouseEvent):void {			this.slider_mc.startDrag(false, rect);			dragging = true;		}				private function dropIt(e:MouseEvent):void {			if (dragging) {				this.slider_mc.stopDrag();				dragging = false;			}		}				private function moveIt(e:MouseEvent):void {			if (dragging && (isHorizontal && slider_mc.x != prevPos || !isHorizontal && slider_mc.y != prevPos)) {				prevPos = isHorizontal ? slider_mc.x : slider_mc.y;				dispatchEvent(new Event(Event.CHANGE));			}		}				public function get sliderPos():Number {			if (isHorizontal)				return this.slider_mc.x;			else				return this.slider_mc.y;		}				public function set sliderPos(pos:Number):void {			if (pos < 0) pos = 0;			if (pos > sliderLen) pos = sliderLen;			if (isHorizontal) {				this.slider_mc.x = pos;				prevPos = pos;			} else {				this.slider_mc.y = pos;				prevPos = pos;			}		}				public function get sliderLength():Number {			return sliderLen;		}	}}